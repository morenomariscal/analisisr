p <- ggplot(mex, aes(x=Fecha, y=Infectados)) +
geom_line( color="blue") +
geom_point() +
labs(x = "Fecha",
y = "Acumulado de casos confirmados",
title = paste("Confirmados de COVID-19 en MÃ©xico:",
format(Sys.time(),
tz="America/Mexico_City",
usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1))  # color, Ã¡ngulo y estilo de las abcisas y ordenadas
p <- p  + scale_x_date(labels = date_format("%d-%m-%Y")) # paquete scales
p <- ggplot(mex, aes(x=Fecha, y=Infectados)) +
geom_line( color="blue") +
geom_point() +
labs(x = "Fecha",
y = "Acumulado de casos confirmados",
title = paste("Confirmados de COVID-19 en MÃ©xico:",
format(Sys.time(),
tz="America/Mexico_City",
usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1))
library(scales)
library(dplyr)
library(ggplot2)
mex <- read.csv("D:/Documentos/DataAnalysis/R/Programacion-R-Santander-2021-main/Sesion-02/Ejemplo-06/data/C19Mexico.csv") # Carga tu fichero
head(mex); tail(mex)
mex <- mutate(mex, Fecha = as.Date(Fecha, "%Y-%m-%d"))
str(mex)
p <- ggplot(mex, aes(x=Fecha, y=Infectados)) +
geom_line( color="blue") +
geom_point() +
labs(x = "Fecha",
y = "Acumulado de casos confirmados",
title = paste("Confirmados de COVID-19 en MÃ©xico:",
format(Sys.time(),
tz="America/Mexico_City",
usetz=TRUE))) +
theme(plot.title = element_text(size=12))  +
theme(axis.text.x = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1),
axis.text.y = element_text(face = "bold", color="#993333" ,
size = 10, angle = 45,
hjust = 1))
library(ggplot2)
names(mtcars); str(mtcars)
g <- ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg )) +
geom_point()
View(g)
library(plotly)
ggplotly(g)
ggplot(mtcars, aes(x=cyl, y = hp, colour = mpg )) +
geom_point() +
theme_gray() +   # Temas (inteta cambiarlo)
facet_wrap("am")
Gr1 <- dbGetQuery(db,
"select platform,
year,
sum(global) as ventas
from sales
where year <> 'N/A'
group by platform, year;")
library(dplyr)
library(DBI)
library(RMySQL)
library(ggplot2)
library(plotly)
db <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "games",
host = "192.168.15.12",
username = "root",
password = "srvc.eie.1"
)
#Exploro la base de datos para validar conexión
dbListTables(db)
Gr1 <- dbGetQuery(db,
"select platform,
year,
sum(global) as ventas
from sales
where year <> 'N/A'
group by platform, year;")
View(Gr1)
View(g)
Datos <- dbGetQuery(db,
"select platform,
year,
sum(global) as ventas
from sales
where year <> 'N/A'
group by platform, year;")
g1 <- ggplot(Datos, aes(x=year, y = ventas, colour = platform )) +
geom_point()
View(g1)
ggplot(Datos, aes(x=year, y = ventas, colour = platform )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where year <> 'N/A'
group by genre, year;")
ggplot(Datos, aes(x=genre, y = ventas, colour = year )) +
geom_point() +
theme_gray()
library(dplyr)
library(DBI)
library(RMySQL)
library(ggplot2)
library(plotly)
#Realizo conexión a base de datos para obtener los datos para obtener los datos
db <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "games",
host = "192.168.15.12",
username = "root",
password = "srvc.eie.1"
)
#Exploro la base de datos para validar conexión
dbListTables(db)
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where year <> 'N/A' and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=genre, y = ventas, colour = year )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where year <> 'N/A' and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=genre, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
dbListTables(db)
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2010) and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=genre, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2010) and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=genre, y = year, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2010) and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000) and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000) and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_line() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000) and global >9.99
group by genre, year;")
ggplot(Datos, aes(x=genre, y = ventas, colour = year )) +
geom_line() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000) and global >9.99
group by genre, year
order by year;")
ggplot(Datos, aes(x=genre, y = ventas, colour = year )) +
geom_line() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000) and global >9.99
group by genre, year
order by year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_line() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2010) and global >9.99
group by genre, year
order by year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_line() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2010) and global >9.99
group by genre, year
order by year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000) and global >9.99
group by genre, year
order by year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select genre,
year,
sum(global) as ventas
from sales
where (year <> 'N/A' and year>2000)
group by genre, year
order by year;")
ggplot(Datos, aes(x=year, y = ventas, colour = genre )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where year <> 'N/A'
order by global desc;")
#Se convierten a factor las columnas de platform, genre y plusher. A enetero year
Datos <- mutate(Datos, platform= as.factor(platform),
genre= as.factor(genre),
publisher= as.factor(publisher),
year= as.integer(year)
)
str(Datos)
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray()
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where (year <> 'N/A' and yezr>2000 and global>9.99
order by global desc;")
#Se convierten a factor las columnas de platform, genre y plusher. A enetero year
Datos <- mutate(Datos, platform= as.factor(platform),
genre= as.factor(genre),
publisher= as.factor(publisher),
year= as.integer(year)
)
str(Datos)
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where (year <> 'N/A' and yezr>2010 and global>9.99
order by global desc;")
#Se convierten a factor las columnas de platform, genre y plusher. A enetero year
Datos <- mutate(Datos, platform= as.factor(platform),
genre= as.factor(genre),
publisher= as.factor(publisher),
year= as.integer(year)
)
str(Datos)
library(dplyr)
library(DBI)
library(RMySQL)
library(ggplot2)
library(plotly)
db <- dbConnect(
drv = RMySQL::MySQL(),
dbname = "games",
host = "192.168.15.12",
username = "root",
password = "srvc.eie.1"
)
#Exploro la base de datos para validar conexión
dbListTables(db)
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where (year <> 'N/A' and yezr>2010 and global>9.99
order by global desc;")
#Se convierten a factor las columnas de platform, genre y plusher. A enetero year
Datos <- mutate(Datos, platform= as.factor(platform),
genre= as.factor(genre),
publisher= as.factor(publisher),
year= as.integer(year)
)
str(Datos)
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where (year <> 'N/A' and yezr>2010 and global>9.99
order by global desc;")
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where (year <> 'N/A' and year>2010) and global>9.99
order by global desc;")
Datos <- mutate(Datos, platform= as.factor(platform),
genre= as.factor(genre),
publisher= as.factor(publisher),
year= as.integer(year)
)
str(Datos)
Datos <- dbGetQuery(db,
"select name,
platform,
year,
genre,
publisher,
na,
eu,
jp,
other,
global
from sales
where year <> 'N/A' and global>9.99
order by global desc;")
#Se convierten a factor las columnas de platform, genre y plusher. A enetero year
Datos <- mutate(Datos, platform= as.factor(platform),
genre= as.factor(genre),
publisher= as.factor(publisher),
year= as.integer(year)
)
str(Datos)
ggplot(Datos, aes(x=genre, y = platform )) +
geom_point() +
theme_gray()
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray()
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray() +
facet_wrap("publisher")
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray() +
facet_grid("publisher")
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray() +
facet_grid("genre")
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray() +
facet_wrap("genre")
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray()
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray() +
facet_wrap("genre")
ggplot(Datos, aes(x=genre, y = platform, colour = publisher )) +
geom_point() +
theme_gray() +
facet_wrap("year")
ggplot(Datos, aes(x=genre, y = platform, colour = patform )) +
geom_point() +
theme_gray() +
facet_wrap("year")
ggplot(Datos, aes(x=genre, y = platform, colour = platform )) +
geom_point() +
theme_gray() +
facet_wrap("year")
ggplot(Datos, aes(x=genre, y = platform, colour = global )) +
geom_point() +
theme_gray() +
facet_wrap("year")
ggplot(Datos, aes(x=global, y = platform, colour = platform )) +
geom_point() +
theme_gray() +
facet_wrap("year")
ggplot(Datos, aes(x=global, y = platform, colour = platform )) +
geom_point() +
theme_gray() +
facet_wrap("year")+  # Lo divide por el nÃºm de cilindros
xlab('Ventas por millones mayores a 9.99') +  # Nombre en los ejes
ylab('Plataforma')
gr1 <- ggplot(Datos, aes(x=global, y = platform, colour = platform )) +
geom_point() +
theme_gray() +
facet_wrap("year")+  # Lo divide por el nÃºm de cilindros
xlab('Ventas mayores a 10 millones de dolares') +  # Nombre en los ejes
ylab('Plataformas')
ggplotly(gr1)
gr1 <- ggplot(Datos, aes(x=global, y = genre, colour = platform )) +
geom_point() +
theme_gray() +
facet_wrap("year")+  # Lo divide por el nÃºm de cilindros
xlab('Ventas mayores a 10 millones de dolares') +  # Nombre en los ejes
ylab('Genero')
ggplotly(gr1)
(my_scatplot <- ggplot(mtcars, aes(x = wt, y = mpg)) +
geom_point())
(my_scatplot <- ggplot(mtcars, aes(x=wt,y=mpg)) +
geom_point() +
geom_smooth(method = "lm", se = T))
